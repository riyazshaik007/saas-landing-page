version: 0.2

env:
  variables:
    IMAGE_REPO_NAME: "react-app"
    IMAGE_TAG: "latest"
    AWS_ACCOUNT_ID: "807034087511"  # Replace with your AWS account ID
    AWS_DEFAULT_REGION: "us-east-1"  # Replace with your region, e.g., us-east-1
    CONTAINER_NAME: "react-app"  # Replace with the container name from your ECS task definition

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME .
      - docker tag $IMAGE_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Creating imagedefinitions.json...
      - printf '[{"name":"%s","imageUri":"%s"}]' "$CONTAINER_NAME" "$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG" > imagedefinitions.json
      - echo Verifying imagedefinitions.json...
      - cat imagedefinitions.json  # Debug: Display file contents
      - ls -la  # Debug: List files to confirm imagedefinitions.json exists

artifacts:
  files:
    - imagedefinitions.json
  discard-paths: yes  # Ensure file is at root of artifact ZIP
